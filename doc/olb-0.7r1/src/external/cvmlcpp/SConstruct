env    = SConscript('build/SConscript')
TARGET = ARGUMENTS.get('TARGET', '/usr/local')

# Install Directories
TARGETLIB   = TARGET + '/lib'
TARGETINC   = TARGET + '/include/cvmlcpp'
TARGETDOC   = TARGET + '/share/doc/cvmlcpp'
TARGETBLD   = TARGET + '/share/cvmlcpp'
TARGETOMPTL = TARGET + '/include'

SRC    = ['cvmlcpp/array', 'cvmlcpp/base', 'cvmlcpp/math', 'cvmlcpp/signal', 'cvmlcpp/volume']
LIBSRC = ['cvmlcpp/base/Storage.cc', 'cvmlcpp/volume/SurfaceExtractor.cc']

staticCVMLCPP = env.StaticLibrary( 'cvmlcpp', LIBSRC )
sharedCVMLCPP = env.SharedLibrary( 'cvmlcpp', LIBSRC )

env.Install( TARGETDOC, 'doc' )
env.Install( TARGETINC, SRC )
env.Install( TARGETOMPTL, 'omptl' )
env.Install( TARGETLIB, [staticCVMLCPP, sharedCVMLCPP] )
env.Install( TARGETBLD, 'build' )
env.Alias('install', [TARGETDOC, TARGETINC, TARGETLIB, TARGETBLD, TARGETOMPTL])
